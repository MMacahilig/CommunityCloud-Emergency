(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
require('./modules/cloud-processes');


},{"./modules/cloud-processes":2}],2:[function(require,module,exports){


    $("#deleteEvents").click(function() {
        console.log("Alerts Deleted");
        $.ajax({
            url: "cloud/deleteEvents",
            type: "DELETE"

        }).done(function(){
            console.log("DELETED");
            location.reload();
        });
    });

    $("#deleteAlerts").click(function() {
        console.log("Alerts Deleted");
        var userId = $("#userID").html();
        //$.ajax({
        //    url: "cloud/deleteAlerts",
        //    type: "DELETE"
        //
        //}).done(function(){
        //    console.log("DELETED");
        //    location.reload();
        //});
        console.log(userId);
        $.ajax({
            url: "cloud/dismissallalerts",
            type: "PUT",
            data:{id:userId}

        }).done(function(){
            console.log("DELETED");
            location.reload();
        });

    });

    $("#sendEvent").click(function(){
        //console.log("Event Sent");
        var AlertType = $("#alertType").val();
        var detail = $("#alertDetails").val();
        var userlocation = $("#location").val();
        var address =  $("#address").val();
        var city  =  $("#city").val();
        var state =  $("#state").val();
        var rating = $("#alertRating").val();
        var userId = $("#userID").html();
        var userName = $("#username").html();
        console.log(userName);

        $.ajax({
            url:"http://emergencyservicecloud.herokuapp.com/cloud/event",
            type: "POST",
            data: {
                alertType: AlertType,
                details: detail,
                address: address,
                city: city,
                state: state,
                rating: rating,
                createdBy: userName,
                createdId: userId
            }
        }).done(function(){
            console.log("saved");
        });

        $.ajax({
            url:"http://communitycloud.herokuapp.com/cloud/receiveEvent",
            type: "POST",
            crossDomain: true,
            xhrFields: {
                withCredentials: true
            },
            data: {
                alertType: AlertType,
                details: detail,
                address: address,
                city: city,
                state: state,
                rating: rating,
                createdBy: userName,
                createdId: userId
            }
        }).done(function(){
            console.log("SENT! To Community");
            location.reload();

        });

        location.reload();
    });

    $(".close").click(function() {
        var userId = $("#userID").html();
        var eventId = $(this).parent().parent().find("#eventId").text();
        $(this).parent().parent().fadeOut();
        $.ajax({
            url:"http://emergencyservicecloud.herokuapp.com/cloud/dismissalert",
            type: "PUT",
            data: {
                id:userId,
                eventId:eventId
            }
        }).done(function(){
            console.log("saved");
        });
    });

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy93YXRjaGlmeS9ub2RlX21vZHVsZXMvYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIiwiY2xpZW50L21haW4uanMiLCJjbGllbnQvbW9kdWxlcy9jbG91ZC1wcm9jZXNzZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7O0FDRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJyZXF1aXJlKCcuL21vZHVsZXMvY2xvdWQtcHJvY2Vzc2VzJyk7XG5cbiIsIlxuXG4gICAgJChcIiNkZWxldGVFdmVudHNcIikuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQWxlcnRzIERlbGV0ZWRcIik7XG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IFwiY2xvdWQvZGVsZXRlRXZlbnRzXCIsXG4gICAgICAgICAgICB0eXBlOiBcIkRFTEVURVwiXG5cbiAgICAgICAgfSkuZG9uZShmdW5jdGlvbigpe1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJERUxFVEVEXCIpO1xuICAgICAgICAgICAgbG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgJChcIiNkZWxldGVBbGVydHNcIikuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQWxlcnRzIERlbGV0ZWRcIik7XG4gICAgICAgIHZhciB1c2VySWQgPSAkKFwiI3VzZXJJRFwiKS5odG1sKCk7XG4gICAgICAgIC8vJC5hamF4KHtcbiAgICAgICAgLy8gICAgdXJsOiBcImNsb3VkL2RlbGV0ZUFsZXJ0c1wiLFxuICAgICAgICAvLyAgICB0eXBlOiBcIkRFTEVURVwiXG4gICAgICAgIC8vXG4gICAgICAgIC8vfSkuZG9uZShmdW5jdGlvbigpe1xuICAgICAgICAvLyAgICBjb25zb2xlLmxvZyhcIkRFTEVURURcIik7XG4gICAgICAgIC8vICAgIGxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICAvL30pO1xuICAgICAgICBjb25zb2xlLmxvZyh1c2VySWQpO1xuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBcImNsb3VkL2Rpc21pc3NhbGxhbGVydHNcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUFVUXCIsXG4gICAgICAgICAgICBkYXRhOntpZDp1c2VySWR9XG5cbiAgICAgICAgfSkuZG9uZShmdW5jdGlvbigpe1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJERUxFVEVEXCIpO1xuICAgICAgICAgICAgbG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgIH0pO1xuXG4gICAgfSk7XG5cbiAgICAkKFwiI3NlbmRFdmVudFwiKS5jbGljayhmdW5jdGlvbigpe1xuICAgICAgICAvL2NvbnNvbGUubG9nKFwiRXZlbnQgU2VudFwiKTtcbiAgICAgICAgdmFyIEFsZXJ0VHlwZSA9ICQoXCIjYWxlcnRUeXBlXCIpLnZhbCgpO1xuICAgICAgICB2YXIgZGV0YWlsID0gJChcIiNhbGVydERldGFpbHNcIikudmFsKCk7XG4gICAgICAgIHZhciB1c2VybG9jYXRpb24gPSAkKFwiI2xvY2F0aW9uXCIpLnZhbCgpO1xuICAgICAgICB2YXIgYWRkcmVzcyA9ICAkKFwiI2FkZHJlc3NcIikudmFsKCk7XG4gICAgICAgIHZhciBjaXR5ICA9ICAkKFwiI2NpdHlcIikudmFsKCk7XG4gICAgICAgIHZhciBzdGF0ZSA9ICAkKFwiI3N0YXRlXCIpLnZhbCgpO1xuICAgICAgICB2YXIgcmF0aW5nID0gJChcIiNhbGVydFJhdGluZ1wiKS52YWwoKTtcbiAgICAgICAgdmFyIHVzZXJJZCA9ICQoXCIjdXNlcklEXCIpLmh0bWwoKTtcbiAgICAgICAgdmFyIHVzZXJOYW1lID0gJChcIiN1c2VybmFtZVwiKS5odG1sKCk7XG4gICAgICAgIGNvbnNvbGUubG9nKHVzZXJOYW1lKTtcblxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOlwiaHR0cDovL2VtZXJnZW5jeXNlcnZpY2VjbG91ZC5oZXJva3VhcHAuY29tL2Nsb3VkL2V2ZW50XCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBhbGVydFR5cGU6IEFsZXJ0VHlwZSxcbiAgICAgICAgICAgICAgICBkZXRhaWxzOiBkZXRhaWwsXG4gICAgICAgICAgICAgICAgYWRkcmVzczogYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBjaXR5OiBjaXR5LFxuICAgICAgICAgICAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgICAgICAgICAgICByYXRpbmc6IHJhdGluZyxcbiAgICAgICAgICAgICAgICBjcmVhdGVkQnk6IHVzZXJOYW1lLFxuICAgICAgICAgICAgICAgIGNyZWF0ZWRJZDogdXNlcklkXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pLmRvbmUoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic2F2ZWRcIik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6XCJodHRwOi8vY29tbXVuaXR5Y2xvdWQuaGVyb2t1YXBwLmNvbS9jbG91ZC9yZWNlaXZlRXZlbnRcIixcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgY3Jvc3NEb21haW46IHRydWUsXG4gICAgICAgICAgICB4aHJGaWVsZHM6IHtcbiAgICAgICAgICAgICAgICB3aXRoQ3JlZGVudGlhbHM6IHRydWVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgYWxlcnRUeXBlOiBBbGVydFR5cGUsXG4gICAgICAgICAgICAgICAgZGV0YWlsczogZGV0YWlsLFxuICAgICAgICAgICAgICAgIGFkZHJlc3M6IGFkZHJlc3MsXG4gICAgICAgICAgICAgICAgY2l0eTogY2l0eSxcbiAgICAgICAgICAgICAgICBzdGF0ZTogc3RhdGUsXG4gICAgICAgICAgICAgICAgcmF0aW5nOiByYXRpbmcsXG4gICAgICAgICAgICAgICAgY3JlYXRlZEJ5OiB1c2VyTmFtZSxcbiAgICAgICAgICAgICAgICBjcmVhdGVkSWQ6IHVzZXJJZFxuICAgICAgICAgICAgfVxuICAgICAgICB9KS5kb25lKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNFTlQhIFRvIENvbW11bml0eVwiKTtcbiAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpO1xuXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpO1xuICAgIH0pO1xuXG4gICAgJChcIi5jbG9zZVwiKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHVzZXJJZCA9ICQoXCIjdXNlcklEXCIpLmh0bWwoKTtcbiAgICAgICAgdmFyIGV2ZW50SWQgPSAkKHRoaXMpLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoXCIjZXZlbnRJZFwiKS50ZXh0KCk7XG4gICAgICAgICQodGhpcykucGFyZW50KCkucGFyZW50KCkuZmFkZU91dCgpO1xuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOlwiaHR0cDovL2VtZXJnZW5jeXNlcnZpY2VjbG91ZC5oZXJva3VhcHAuY29tL2Nsb3VkL2Rpc21pc3NhbGVydFwiLFxuICAgICAgICAgICAgdHlwZTogXCJQVVRcIixcbiAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICBpZDp1c2VySWQsXG4gICAgICAgICAgICAgICAgZXZlbnRJZDpldmVudElkXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pLmRvbmUoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic2F2ZWRcIik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuIl19
